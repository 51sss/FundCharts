/**
 * bar chart
 * drawer
 */

import{each}from'../utils/base'import{Animation}from'../utils/animate'import{drawDashLine}from'../utils/drawer'import Config from'../config'let barMargin=Config.bar.margin;export default class Draw{constructor(FundChart){if(!FundChart)throw new Error('Error!no canvas element.(FundChart-draw)');this.chartjs=FundChart;let _color=this.chartjs.opts.colors;if(_color){Config.line.colors=_color.concat(Config.line.colors);}}clearCtn(lineCtnBool){const _chartjs=this.chartjs;const ctx=_chartjs.ctx;const _chartWidth=_chartjs._chart.width,_chartHeight=_chartjs._chart.height;ctx.beginPath();if(lineCtnBool){ctx.rect(46,0,_chartWidth,_chartHeight-22);}else{ctx.rect(0,0,_chartWidth,_chartHeight);}ctx.fillStyle=Config.background;ctx.fill();ctx.closePath();}drawDashs(){const ctx=this.chartjs.ctx;const width=this.chartjs._chart.width-13,height=this.chartjs._chart.height;let _unit=(height-30)/4;ctx.lineWidth=0;ctx.strokeStyle=Config.dash.color;ctx.beginPath();for(let i=0;i<5;i++){drawDashLine(ctx,50,i*_unit+5,width,i*_unit+5,Config.dash.length);}ctx.save();}setDataset(){const _chartjs=this.chartjs,opts=_chartjs.opts,_datas=opts.series;if(!_datas||!_datas.length)throw new Error('Error! no series data.');let maxData;let _min=0,_range,_setRange=opts.range;if(_setRange){if(_setRange.min===undefined||_setRange.max===undefined){throw new Error('Error! param range need min and max');}_min=_setRange.min;_range=_setRange.max-_setRange.min;}else{if(_datas.length>1){_chartjs.multline=true;each(_datas,item=>{let _max=Math.max.apply(null,item);maxData=maxData&&maxData>_max?maxData:_max;});}else{maxData=Math.max.apply(null,_datas[0]);}_range=(maxData-_min);if(_range>5)_range=Math.ceil(_range/5)*5;else _range=Math.ceil(_range*1.2);}this.yaxis={min:_min,max:_min+_range,range:_range,unit:_range/4};this.yRate=(30-_chartjs._chart.height)/this.yaxis.range;this.yBasic=5-this.yaxis.max*this.yRate;let _xlength=_datas[0].length;barMargin=_chartjs.opts.barMargin||_xlength>=10&&40-(_xlength-10)*4||barMargin;barMargin=barMargin<0?0:barMargin/(this.chartjs.pixelRatio||1);this.xaxis={min:0,max:_xlength-1,range:_xlength,unit:1};let barWidth=this.chartjs.barWidth=Math.floor((_chartjs._chart.width-65)/_xlength-barMargin)this.xRate=(_chartjs._chart.width-65)/(_xlength+1);this.xBasic=barMargin/2+50;if(_chartjs.multline){let _datasets=[];each(_datas,(item,index)=>{let _dataset=[];for(let i=0,len=item.length;i<len;i++){let _x1=i*barWidth+(i+0.5)*barMargin+50;_dataset.push({x:_x1,y:item[i]*this.yRate+this.yBasic,value:item[i]});}_datasets.push(_dataset);});this.chartjs.datasets=_datasets;}else{let _dataset=[];each(_datas[0],(item,i)=>{let _x1=i*barWidth+(i+0.5)*barMargin+50;_dataset.push({x:_x1,y:item*this.yRate+this.yBasic,value:_datas[0][i]});});this.chartjs.dataset=_dataset;}}wrapText(context,text,x,y,maxWidth,lineHeight){if(typeof text!='string'||typeof x!='number'||typeof y!='number'){return;}var canvas=context.canvas;if(typeof maxWidth=='undefined'){maxWidth=(canvas&&canvas.width)||300;}if(typeof lineHeight=='undefined'){lineHeight=(canvas&&parseInt(window.getComputedStyle(canvas).lineHeight))||parseInt(window.getComputedStyle(document.body).lineHeight);}var arrText=text.split('');var line='';for(var n=0;n<arrText.length;n++){var testLine=line+arrText[n];var metrics=context.measureText(testLine);var testWidth=metrics.width;if(testWidth>maxWidth&&n>0){context.fillText(line,x,y);line=arrText[n];y+=lineHeight;}else{line=testLine;}}context.fillText(line,x,y);}drawTexts(){let ctx=this.chartjs.ctx;let _xaxis=this.chartjs.opts.xaxis;let height=this.chartjs._chart.height;ctx.lineWidth=1;ctx.font=`${Config.font.fontSize.y}Arial`;ctx.fillStyle=Config.font.color;ctx.textAlign='center';let _data=this.chartjs.multline?this.chartjs.datasets[0]:this.chartjs.dataset,_barWidth=this.chartjs.barWidth;ctx.stroke();let _maxWidth=_barWidth*2.5;if(_data.length>=10)_maxWidth=_barWidth*1.8;each(_data,(item,index)=>{if(!_xaxis[index])return false;this.wrapText(ctx,_xaxis[index],item.x+_barWidth/2,height-15,_maxWidth,12);});ctx.textAlign='right';ctx.textBaseline='middle';let _yaxis=this.yaxis;for(let i=0;i<5;i++){let _val=_yaxis.min+i*_yaxis.unit;ctx.fillText(this.chartjs.opts.yaxisfunc?this.chartjs.opts.yaxisfunc(_val):_val.toFixed(2),45,this.yRate*_val+this.yBasic);}}drawBars(process=1){let ctx=this.chartjs.ctx;ctx.lineWidth=1;let ymax=this.chartjs._chart.height-24;if(this.chartjs.multline){let _datasets=this.chartjs.datasets;each(_datasets,(_dataset,index)=>{ctx.beginPath();ctx.lineWidth=0;ctx.strokeStyle=Config.background;let _y=this.chartjs._chart.height-24,_barWidth=this.chartjs.barWidth/_datasets.length;for(let i=0,len=_dataset.length;i<len;i++){ctx.fillStyle=Config.bar.colors[index];ctx.fillRect(_dataset[i].x+_barWidth*index,_y,_barWidth,(_dataset[i].y-ymax)*process+ymax-_y);}ctx.stroke();});}else{let _dataset=this.chartjs.dataset;ctx.beginPath();ctx.lineWidth=0;ctx.strokeStyle=Config.background;let _y=this.chartjs._chart.height-24,_barWidth=this.chartjs.barWidth;for(let i=0,len=_dataset.length;i<len;i++){ctx.fillStyle=Config.bar.colors[0];ctx.fillRect(_dataset[i].x,_y,_barWidth,(_dataset[i].y-ymax)*process+ymax-_y);}ctx.stroke();}ctx.save();}draw(databool,noanimatebool){this.clearCtn(!databool);this.drawDashs();if(databool){this.setDataset();this.drawTexts();}if(!Config.inBrowser||noanimatebool)this.drawBars(1);else{Animation({timing:'easeInOut',duration:800,onProcess:processrate=>{this.clearCtn(true);this.drawDashs();this.drawBars(processrate);},onAnimationFinish:()=>{console.log('chart finish');}});}}init(){this.draw(true);}}

ctx.fillStyle=Config.background;ctx.fill();ctx.closePath();}
drawDashs(){const ctx=this.chartjs.ctx;const width=this.chartjs._chart.width-13,height=this.chartjs._chart.height;let _unit=(height-30)/4;ctx.lineWidth=0;ctx.strokeStyle=Config.dash.color;ctx.beginPath();for(let i=0;i<5;i++){drawDashLine(ctx,50,i*_unit+5,width,i*_unit+5,Config.dash.length);}
ctx.save();}
setDataset(){const _chartjs=this.chartjs,opts=_chartjs.opts,_datas=opts.series;if(!_datas||!_datas.length)throw new Error('Error! no series data.');let maxData;let _min=0,_range,_setRange=opts.range;if(_setRange){if(_setRange.min===undefined||_setRange.max===undefined){throw new Error('Error! param range need min and max');}
_min=_setRange.min;_range=_setRange.max-_setRange.min;}else{if(_datas.length>1){_chartjs.multline=true;each(_datas,item=>{let _max=Math.max.apply(null,item);maxData=maxData&&maxData>_max?maxData:_max;});}else{maxData=Math.max.apply(null,_datas[0]);}
_range=(maxData-_min);if(_range>5)_range=Math.ceil(_range/5)*5;else _range=Math.ceil(_range*1.2);}
this.yaxis={min:_min,max:_min+_range,range:_range,unit:_range/4};this.yRate=(30-_chartjs._chart.height)/this.yaxis.range;this.yBasic=5-this.yaxis.max*this.yRate;let _xlength=_datas[0].length;barMargin=_chartjs.opts.barMargin||_xlength>=10&&40-(_xlength-10)*4||barMargin;barMargin=barMargin<0?0:barMargin/(this.chartjs.pixelRatio||1);this.xaxis={min:0,max:_xlength-1,range:_xlength,unit:1};let barWidth=this.chartjs.barWidth=Math.floor((_chartjs._chart.width-65)/_xlength-barMargin)
this.xRate=(_chartjs._chart.width-65)/(_xlength+1);this.xBasic=barMargin/2+50;if(_chartjs.multline){let _datasets=[];each(_datas,(item,index)=>{let _dataset=[];for(let i=0,len=item.length;i<len;i++){let _x1=i*barWidth+(i+0.5)*barMargin+50;_dataset.push({x:_x1,y:item[i]*this.yRate+this.yBasic,value:item[i]});}
_datasets.push(_dataset);});this.chartjs.datasets=_datasets;}else{let _dataset=[];each(_datas[0],(item,i)=>{let _x1=i*barWidth+(i+0.5)*barMargin+50;_dataset.push({x:_x1,y:item*this.yRate+this.yBasic,value:_datas[0][i]});});this.chartjs.dataset=_dataset;}}
wrapText(context,text,x,y,maxWidth,lineHeight){if(typeof text!='string'||typeof x!='number'||typeof y!='number'){return;}
var canvas=context.canvas;if(typeof maxWidth=='undefined'){maxWidth=(canvas&&canvas.width)||300;}
if(typeof lineHeight=='undefined'){lineHeight=(canvas&&parseInt(window.getComputedStyle(canvas).lineHeight))||parseInt(window.getComputedStyle(document.body).lineHeight);}
var arrText=text.split('');var line='';for(var n=0;n<arrText.length;n++){var testLine=line+arrText[n];var metrics=context.measureText(testLine);var testWidth=metrics.width;if(testWidth>maxWidth&&n>0){context.fillText(line,x,y);line=arrText[n];y+=lineHeight;}else{line=testLine;}}
context.fillText(line,x,y);}
drawTexts(){let ctx=this.chartjs.ctx;let _xaxis=this.chartjs.opts.xaxis;let height=this.chartjs._chart.height;ctx.lineWidth=1;ctx.font=`${Config.font.fontSize.y} Arial`;ctx.fillStyle=Config.font.color;ctx.textAlign='center';let _data=this.chartjs.multline?this.chartjs.datasets[0]:this.chartjs.dataset,_barWidth=this.chartjs.barWidth;ctx.stroke();let _maxWidth=_barWidth*2.5;if(_data.length>=10)_maxWidth=_barWidth*1.8;each(_data,(item,index)=>{if(!_xaxis[index])return false;this.wrapText(ctx,_xaxis[index],item.x+_barWidth/2,height-15,_maxWidth,12);});ctx.textAlign='right';ctx.textBaseline='middle';let _yaxis=this.yaxis;for(let i=0;i<5;i++){let _val=_yaxis.min+i*_yaxis.unit;ctx.fillText(this.chartjs.opts.yaxisfunc?this.chartjs.opts.yaxisfunc(_val):_val.toFixed(2),45,this.yRate*_val+this.yBasic);}}
drawBars(process=1){let ctx=this.chartjs.ctx;ctx.lineWidth=1;let ymax=this.chartjs._chart.height-24;if(this.chartjs.multline){let _datasets=this.chartjs.datasets;each(_datasets,(_dataset,index)=>{ctx.beginPath();ctx.lineWidth=0;ctx.strokeStyle=Config.background;let _y=this.chartjs._chart.height-24,_barWidth=this.chartjs.barWidth/_datasets.length;for(let i=0,len=_dataset.length;i<len;i++){ctx.fillStyle=Config.bar.colors[index];ctx.fillRect(_dataset[i].x+_barWidth*index,_y,_barWidth,(_dataset[i].y-ymax)*process+ymax-_y);}
ctx.stroke();});}else{let _dataset=this.chartjs.dataset;ctx.beginPath();ctx.lineWidth=0;ctx.strokeStyle=Config.background;let _y=this.chartjs._chart.height-24,_barWidth=this.chartjs.barWidth;for(let i=0,len=_dataset.length;i<len;i++){ctx.fillStyle=Config.bar.colors[0];ctx.fillRect(_dataset[i].x,_y,_barWidth,(_dataset[i].y-ymax)*process+ymax-_y);}
ctx.stroke();}
ctx.save();}
draw(databool,noanimatebool){this.clearCtn(!databool);this.drawDashs();if(databool){this.setDataset();this.drawTexts();}
if(!Config.inBrowser||noanimatebool)this.drawBars(1);else{Animation({timing:'easeInOut',duration:800,onProcess:processrate=>{this.clearCtn(true);this.drawDashs();this.drawBars(processrate);},onAnimationFinish:()=>{console.log('chart finish');}});}}
init(){this.draw(true);}}
